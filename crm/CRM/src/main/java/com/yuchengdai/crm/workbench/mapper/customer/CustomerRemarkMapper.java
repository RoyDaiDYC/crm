package com.yuchengdai.crm.workbench.mapper.customer;

import com.yuchengdai.crm.workbench.domain.CustomerRemark;

import java.util.List;

public interface CustomerRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int insert(CustomerRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int insertSelective(CustomerRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    CustomerRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int updateByPrimaryKeySelective(CustomerRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer_remark
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int updateByPrimaryKey(CustomerRemark record);

    /**
     * 通过线索转换把对应的线索的备注内容添加客户备注内
     *
     * @param customerRemarkList
     * @return
     */
    int insertCustomerRemarkFromClueConvert(List<CustomerRemark> customerRemarkList);

    /**
     * 通过客户id查询获取详细的客户备注信息
     *
     * @param customerId
     * @return
     */
    List<CustomerRemark> selectCustomerRemarkForDetailByCustomerId(String customerId);

    /**
     * 通过客户id批量删除对应的客户备注信息
     *
     * @param customerIds
     * @return
     */
    int deleteCustomerRemarkByCustomerId(String[] customerIds);

    /**
     * 添加一条客户备注信息
     *
     * @param customerRemark
     * @return
     */
    int insertCustomerRemark(CustomerRemark customerRemark);

    /**
     * 通过客户备注id进行备注信息的更新
     *
     * @param customerRemark
     * @return
     */
    int updateCustomerRemark(CustomerRemark customerRemark);

    /**
     * 通过id删除指定的客户备注信息
     *
     * @param id
     * @return
     */
    int deleteCustomerRemarkById(String id);
}