package com.yuchengdai.crm.workbench.mapper.marketingActivities;

import com.yuchengdai.crm.workbench.domain.MarketingActivities;

import java.util.List;
import java.util.Map;

public interface MarketingActivitiesMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_marketing_activities
     *
     * @mbg.generated Fri Mar 13 15:42:01 CST 2017
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_marketing_activities
     *
     * @mbg.generated Fri Mar 13 15:42:01 CST 2017
     */
    int insert(MarketingActivities record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_marketing_activities
     *
     * @mbg.generated Fri Mar 13 15:42:01 CST 2017
     */
    int insertSelective(MarketingActivities record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_marketing_activities
     *
     * @mbg.generated Fri Mar 13 15:42:01 CST 2017
     */
    MarketingActivities selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_marketing_activities
     *
     * @mbg.generated Fri Mar 13 15:42:01 CST 2017
     */
    int updateByPrimaryKeySelective(MarketingActivities record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_marketing_activities
     *
     * @mbg.generated Fri Mar 13 15:42:01 CST 2017
     */
    int updateByPrimaryKey(MarketingActivities record);

    /**
     * 添加一个市场活动内容
     *
     * @param marketingActivities
     * @return
     */
    int insertMarketingActivities(MarketingActivities marketingActivities);

    /**
     * 获取所有市场活动数据
     * 通过map集合控制分页,控制查询条件
     *
     * @param map
     * @return
     */
    List<MarketingActivities> selectAllMarketingActivitiesForDetailByCondition(Map<String, Object> map);

    /**
     * 在筛选条件下
     * 获取所有市场活动的条数
     *
     * @return
     */
    int selectCountAllMarketingActivities(Map<String, Object> map);


    /**
     * 通过id更新市场活动内容
     *
     * @param marketingActivities
     * @return
     */
    int updateMarketingActivitiesById(MarketingActivities marketingActivities);


    /**
     * 通过id获取市场活动内容
     * owner字段使用user的name对应值，create_by字段使用user的name对应值，edit_by使用user的name对应值
     *
     * @param id
     * @return
     */
    MarketingActivities selectMarketingActivitiesById(String id);


    /**
     * 通过id删除市场活动信息
     *
     * @param ids
     * @return
     */
    int deleteMarketingActivitiesById(String[] ids);


    /**
     * 获取所有市场活动信息
     *
     * @return
     */
    List<MarketingActivities> selectAllMarketingActivitiesForDetail();


    /**
     * 通过id查询出市场信息
     * 查询出多条活动内容进行导出
     *
     * @param ids
     * @return
     */
    List<MarketingActivities> selectMarketingActivitiesForDetailByIds(String[] ids);

    /**
     * 批量插入多行市场活动数据
     *
     * @param marketingActivitiesList
     * @return
     */
    int insertMarketingActivitiesList(List<MarketingActivities> marketingActivitiesList);

    /**
     * 通过id查询出市场活动信息
     * owner字段使用user的name对应值，create_by字段使用user的name对应值，edit_by使用user的name对应值
     *
     * @param id
     * @return
     */
    MarketingActivities selectMarketingActivitiesForDetailById(String id);

    /**
     * 根据市场活动名称模糊查询市场活动内容
     * owner字段使用user的name对应值，create_by字段使用user的name对应值，edit_by使用user的name对应值
     * 查询出的市场活动中，不能有已关联线索的
     * 通过查询出在线索活动关系表中对应线索id的所有市场活动id
     * 然后排出这些市场活动，取其他内容
     *
     * @param map
     * @return
     */
    List<MarketingActivities> selectMarketingActivitiesForDetailByNameAndClueId(Map<String, Object> map);

    /**
     * 通过市场活动名称模糊查询获取市场活动内容集合
     *
     * @param name
     * @return
     */
    List<MarketingActivities> selectMarketingActivitiesForDetailByName(String name);

    /**
     * 根据市场活动名称模糊查询市场活动内容
     * owner字段使用user的name对应值，create_by字段使用user的name对应值，edit_by使用user的name对应值
     * 查询出的市场活动中，不能有已关联联系人的
     * 通过查询出在联系人活动关系表中对应联系人id的所有市场活动id
     * 然后排出这些市场活动，取其他内容
     *
     * @param map
     * @return
     */
    List<MarketingActivities> selectMarketingActivitiesForDetailByNameAndContactsId(Map<String, Object> map);
}