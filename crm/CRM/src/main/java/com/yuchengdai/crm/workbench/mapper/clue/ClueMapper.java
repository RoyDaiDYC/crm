package com.yuchengdai.crm.workbench.mapper.clue;

import com.yuchengdai.crm.workbench.domain.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Tue Mar 24 09:28:46 CST 2017
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Tue Mar 24 09:28:46 CST 2017
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Tue Mar 24 09:28:46 CST 2017
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Tue Mar 24 09:28:46 CST 2017
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Tue Mar 24 09:28:46 CST 2017
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Tue Mar 24 09:28:46 CST 2017
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 添加一个市场线索
     *
     * @param clue
     * @return
     */
    int insertClue(Clue clue);

    /**
     * 通过查询信息，和分页内容，查询出线索条目
     *
     * @param map
     * @return
     */
    List<Clue> selectAllClueForDetailByCondition(Map<String, Object> map);

    /**
     * 获取所有根据条件查询到的线索条数
     *
     * @param map
     * @return
     */
    int selectAllCountClue(Map<String, Object> map);

    /**
     * 根据id查询出线索
     *
     * @param id
     * @return
     */
    Clue selectClueById(String id);

    /**
     * 根据id更新一个线索内容
     *
     * @param clue
     * @return
     */
    int updateClueById(Clue clue);

    /**
     * 根据id删除对应的线索
     *
     * @param ids
     * @return
     */
    int deleteClueById(String[] ids);

    /**
     * 通过id查询出对应的线索
     * appellation使用数据字典值，resource使用数据字典值，state使用数据字典值
     * editBy使用user的name，owner使用user的name，createBy使用user的name
     *
     * @param id
     * @return
     */
    Clue selectClueForDetailById(String id);

}