package com.yuchengdai.crm.workbench.mapper.contacts;

import com.yuchengdai.crm.workbench.domain.ContactsActivityRelation;

import java.util.List;
import java.util.Map;

public interface ContactsActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int insert(ContactsActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int insertSelective(ContactsActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    ContactsActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int updateByPrimaryKeySelective(ContactsActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts_activity_relation
     *
     * @mbg.generated Sat Mar 28 11:30:22 CST 2017
     */
    int updateByPrimaryKey(ContactsActivityRelation record);

    /**
     * 批量插入联系人市场活动关系内容
     *
     * @param contactsActivityRelationList
     * @return
     */
    int insertContactsActivityRelation(List<ContactsActivityRelation> contactsActivityRelationList);

    /**
     * 根据联系人id批量删除对应的联系人市场活动关系内容
     *
     * @param contactsIds
     * @return
     */
    int deleteContactsActivityRelationByContactsIdArray(String[] contactsIds);

    /**
     * 通过联系人id获取对应的联系人市场活动关系内容
     *
     * @param contactsId
     * @return
     */
    List<ContactsActivityRelation> selectContactsActivityRelationByContactsId(String contactsId);


    /**
     * 通过联系人id确定联系人
     * 再通过市场id进行对应的联系人市场活动关系删除
     *
     * @param map
     * @return
     */
    int deleteContactsActivityRelationByContactsIdActivityId(Map<String, Object> map);
}